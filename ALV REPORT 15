*&---------------------------------------------------------------------*
*& Report  ZALV_REPORT_06N
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT ZALV_REPORT_06N.

TABLES: lfa1 ,zcus_alv_tab, lfb1 ,ekko.

  TYPE-POOLS: slis.

  DATA    sel TYPE i.

  TYPES: BEGIN OF st_lfa1,
        lifnr TYPE lifnr,
        name1 TYPE name1,
        land1 TYPE land1,
        ort01 TYPE ort01_gp,
        pstlz TYPE pstlz,
        adrnr TYPE adrnr,
    END OF st_lfa1.


  TYPES: BEGIN OF st_lfb1,
        lifnr TYPE lifnr,
        bukrs TYPE bukrs,
        begru TYPE begru,
        vzskz TYPE vzskz,
        lnrze TYPE lnrze,
        lnrzb TYPE lnrzb,
  END OF st_lfb1.

  TYPES: BEGIN OF st_ekko,
          lifnr TYPE elifn,
          ebeln TYPE ebeln,
          bstyp TYPE ebstyp,
          bsart TYPE esart,
          lponr TYPE lponr,
          waers TYPE waers,
          bedat TYPE ebdat,
          kdate TYPE kdate,
  END OF st_ekko.

  TYPES: BEGIN OF st_final,
         lifnr TYPE lifnr,
         name1 TYPE name1,
         ebeln TYPE ebeln,
         land1 TYPE land1,
         ort01 TYPE ort01_gp,
         pstlz TYPE pstlz,
         adrnr TYPE adrnr,
         bukrs TYPE bukrs,
         begru TYPE begru,
         vzskz TYPE vzskz,
         lnrze TYPE lnrze,
         lnrzb TYPE lnrzb,
*        LIFNR TYPE ELIFN,
         bsart TYPE esart,
         lponr TYPE lponr,
         waers TYPE waers,
         bedat TYPE ebdat,
         kdate TYPE kdate,
         bstyp TYPE ebstyp,
         remark TYPE zde_remarks,
    END OF st_final.

  DATA: it_lfa1 TYPE STANDARD TABLE OF st_lfa1,
        wa_lfa1 TYPE st_lfa1,
        it_lfb1 TYPE STANDARD TABLE OF st_lfb1,
        wa_lfb1 TYPE st_lfb1,
        it_ekko TYPE STANDARD TABLE OF st_ekko,
        wa_ekko TYPE st_ekko,
        it_zcus_alv_tab TYPE TABLE OF zcus_alv_tab,
        wa_zcus_alv_tab TYPE zcus_alv_tab.


  DATA : it_final TYPE TABLE OF st_final with header line,
*         wa_final like LINE OF it_final.,
         wa_final like LINE OF it_final.

  DATA: it_fcat TYPE slis_t_fieldcat_alv,
        wa_fcat TYPE slis_fieldcat_alv,
        wa_layout TYPE slis_layout_alv.

  DATA: it_filter TYPE slis_t_filter_alv,
        wa_filter TYPE slis_filter_alv.

  DATA:  it_events TYPE slis_t_event,
         wa_events like LINE OF it_events.

  DATA: rs_selfield TYPE slis_selfield.


  SELECTION-SCREEN: BEGIN OF BLOCK b1 WITH FRAME TITLE  text-001.

  SELECT-OPTIONS: p_ebeln FOR ekko-ebeln,
                  p_lifnr FOR lfa1-lifnr,
                  p_name1 FOR lfa1-name1,
                  p_land1 FOR lfa1-land1,
                  p_ort01 FOR lfa1-ort01,
                  p_pstlz FOR lfa1-pstlz,
                  p_adrnr FOR lfa1-adrnr.

  SELECTION-SCREEN: END OF BLOCK b1.


  SELECT
             lifnr
             name1
             land1
             ort01
             pstlz
             adrnr FROM lfa1 INTO CORRESPONDING FIELDS OF TABLE
             it_lfa1 WHERE lifnr IN p_lifnr.

  IF it_lfa1 IS NOT INITIAL.

    SELECT
            bukrs
            lifnr
            begru
            vzskz
            lnrze
            lnrzb
       FROM lfb1 INTO CORRESPONDING FIELDS OF TABLE
       it_lfb1 FOR ALL ENTRIES IN it_lfa1
       WHERE lifnr = it_lfa1-lifnr.

  ENDIF.

  IF it_lfb1 IS NOT INITIAL.

    SELECT lifnr
           bsart
           bstyp
           ebeln
           lponr
           waers
           bedat
           kdate
           FROM ekko INTO CORRESPONDING FIELDS OF TABLE
           it_ekko FOR ALL ENTRIES IN it_lfb1
           WHERE lifnr = it_lfb1-lifnr.


  ENDIF.


  SORT it_lfa1 BY lifnr.
  SORT it_lfb1 BY lifnr.
  SORT it_ekko BY lifnr.

  LOOP AT it_lfa1 INTO wa_lfa1.

    wa_final-lifnr = wa_lfa1-lifnr.
    wa_final-name1 = wa_lfa1-name1.
    wa_final-land1 = wa_lfa1-land1.
    wa_final-ort01 = wa_lfa1-ort01.
    wa_final-pstlz = wa_lfa1-pstlz.
    wa_final-adrnr = wa_lfa1-adrnr.

    READ TABLE it_lfb1 INTO wa_lfb1 WITH KEY lifnr = wa_final-lifnr.
    IF sy-subrc = 0.

*      LOOP AT IT_LFB1 INTO WA_LFB1 WHERE LIFNR = WA_FINAL-LIFNR.
*      WA_FINAL-LIFNR  = WA_LFB1-LIFNR.
      wa_final-bukrs  = wa_lfb1-bukrs.
      wa_final-begru  = wa_lfb1-begru.
      wa_final-vzskz  = wa_lfb1-vzskz.
      wa_final-lnrze  = wa_lfb1-lnrze.
      wa_final-lnrzb  = wa_lfb1-lnrzb.
*       ENDLOOP.

    ENDIF.

    READ TABLE it_ekko INTO wa_ekko WITH KEY lifnr = wa_final-lifnr.
    IF sy-subrc = 0.

*       LOOP AT  IT_EKKO INTO WA_EKKO WHERE BUKRS = WA_FINAL-BUKRS.
*       WA_FINAL-LIFNR = WA_EKKO-LIFNR.
      wa_final-bsart = wa_ekko-bsart.
      wa_final-ebeln = wa_ekko-ebeln.
      wa_final-bstyp = wa_ekko-bstyp.
      wa_final-lponr = wa_ekko-lponr.
      wa_final-waers = wa_ekko-waers.
      wa_final-bedat = wa_ekko-bedat.
      wa_final-kdate = wa_ekko-kdate.
*       ENDLOOP.
    ENDIF.

    APPEND wa_final TO it_final.
    CLEAR wa_final.

  ENDLOOP.


  wa_fcat-fieldname = 'LIFNR'.
  wa_fcat-seltext_m  = 'Vendor'.
  wa_fcat-no_zero   = 'X'.
  wa_layout-colwidth_optimize ='X'.

  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'BSTYP'.
  wa_fcat-seltext_m  = 'Purchasing Cateogry'.
  wa_fcat-emphasize = 'C3'.
  wa_fcat-no_zero   = 'X'.
  wa_layout-colwidth_optimize ='X'.

  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'EBELN'.
  wa_fcat-seltext_m = 'Purchasing order'.
  wa_fcat-emphasize = 'C6'.
  wa_fcat-no_zero   = 'X'.
  wa_fcat-hotspot   = 'X'.
  wa_layout-colwidth_optimize ='X'.

  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'NAME1'.
  wa_fcat-seltext_m  = 'Name 1'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'LAND1'.
  wa_fcat-seltext_m  = 'Country Key'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'ORT01'.
  wa_fcat-seltext_m  = 'City'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'PSTLZ'.
  wa_fcat-seltext_m  = 'Postal Code'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'ADRNR'.
  wa_fcat-seltext_m  = 'ADDRESS'.
  wa_fcat-no_zero   = 'X'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  """""""""2ND"""""""""""""""""""

  wa_fcat-fieldname = 'BUKRS'.
  wa_fcat-seltext_m  = 'Company Code'.
  wa_fcat-emphasize = 'C7'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.




  """""""""""""""""3RD""""""""""""""""

  wa_fcat-fieldname = 'BSART'.
  wa_fcat-seltext_m  = 'Purchasing Document Type'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'LPONR'.
  wa_fcat-seltext_m  = 'Last Item Number'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'WAERS'.
  wa_fcat-seltext_m  = 'Currency Key'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'BEDAT'.
  wa_fcat-seltext_m  = 'Purchasing Document Date'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  wa_fcat-fieldname = 'KDATE'.
  wa_fcat-seltext_m  = 'End of Validity Period'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.


  wa_fcat-fieldname = 'Remarks'.
  wa_fcat-seltext_m  = 'Remarks'.
  wa_fcat-edit = 'X'.
  wa_fcat-outputlen = 50.
*  wa_fcat-OUTPUTLEN ='X'.
  wa_layout-colwidth_optimize ='X'.
  APPEND wa_fcat TO it_fcat.
  CLEAR wa_fcat.

  """"""""""""""""filter""""""""""

  wa_filter-fieldname = 'BSTYP'.
  wa_filter-tabname  = 'IT_FINAL'.
  wa_filter-sign0 = 'I'.
  wa_filter-optio   = 'EQ'.
  wa_filter-valuf_int = 'F'.

  APPEND wa_filter TO it_filter.
  CLEAR wa_filter.

  wa_filter-fieldname = 'BUKRS'.
  wa_filter-tabname  = 'IT_FINAL'.
  wa_filter-sign0 = 'I'.
  wa_filter-optio   = 'EQ'.
  wa_filter-valuf_int = '1000'.

  APPEND wa_filter TO it_filter.
  CLEAR wa_filter.


CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK       = ' '
*     I_BYPASSING_BUFFER      = ' '
*     I_BUFFER_ACTIVE         = ' '
      i_callback_program      = sy-repid
      I_CALLBACK_PF_STATUS_SET = 'PF_STATUS'
      i_callback_user_command = 'USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE  = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME        =
*     I_BACKGROUND_ID         = ' '
*     I_GRID_TITLE            =
*     I_GRID_SETTINGS         =
      is_layout               = wa_layout
      it_fieldcat             = it_fcat
*     IT_EXCLUDING            =
*     IT_SPECIAL_GROUPS       =
*     IT_SORT                 = IT_SORT
     IT_FILTER                = IT_FILTER
*     IS_SEL_HIDE             =
     I_DEFAULT               = 'X'
     I_SAVE                   = 'S'
*     IS_VARIANT              =
*     IT_EVENTS               =
*     IT_EVENT_EXIT           =
*     IS_PRINT                =
*     IS_REPREP_ID            =
*     I_SCREEN_START_COLUMN   = 0
*     I_SCREEN_START_LINE     = 0
*     I_SCREEN_END_COLUMN     = 0
*     I_SCREEN_END_LINE       = 0
*     I_HTML_HEIGHT_TOP       = 0
*     I_HTML_HEIGHT_END       = 0
*     IT_ALV_GRAPHICS         =
*     IT_HYPERLINK            =
*     IT_ADD_FIELDCAT         =
*     IT_EXCEPT_QINFO         =
*     IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER =
*     ES_EXIT_CAUSED_BY_USER  =
    TABLES
      t_outtab                = it_final
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.


  FORM PF_STATUS USING RT_EXTAB TYPE SLIS_T_EXTAB.
  SET PF-STATUS 'ZPFF1'.
*  SET PF-STATUS 'ZSTANDERD'.

ENDFORM.



FORM USER_COMMAND USING R_UCOMM type SY-UCOMM
                     RS_SELFIELD TYPE SLIS_SELFIELD.
*BREAK-POINT.
 CASE R_UCOMM.

   WHEN '&IC1'.

       READ TABLE IT_EKKO into WA_EKKO INDEX RS_SELFIELD-TABINDEX.

       IF WA_EKKO-EBELN IS NOT INITIAL.

       SET PARAMETER ID 'BES' FIELD WA_EKKO-EBELN.
       CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.

       ENDIF.

    WHEN 'SAVE'.

       PERFORM SAVE.

    WHEN 'BACK'.
       SET SCREEN 0.

     WHEN 'CANCEL'.
       LEAVE PROGRAM.

     WHEN ' EXIT'.
      SET SCREEN 0.

ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SAVE.

*    DELETE FROM ZCUS_ALV_TAB.

BREAK-POINT.

  SELECT LIFNR
         REMARK
    FROM ZCUS_ALV_TAB INTO CORRESPONDING FIELDS OF TABLE IT_ZCUS_ALV_TAB.


  if it_ZCUS_ALV_TAB IS not INITIAL.

  LOOP AT it_final into wa_final.

   CLEAR: ZCUS_ALV_TAB.

    MOVE-CORRESPONDING wa_final to wa_ZCUS_ALV_TAB.

    APPEND wa_ZCUS_ALV_TAB to it_ZCUS_ALV_TAB.



*    clear: wa_ZCUS_ALV_TAB . "it_final.
  ENDLOOP.
*
  ENDIF.

*BREAK-POINT.

if it_zcus_alv_tab is INITIAL.

INSERT ZCUS_ALV_TAB from TABLE it_ZCUS_ALV_TAB.

 MESSAGE 'DATA SAVED SUCCESSFULLY' TYPE 'S'.

ELSE.
*BREAK-POINT.

  MODIFY ZCUS_ALV_TAB FROM TABLE it_ZCUS_ALV_TAB.

  MESSAGE 'DATA SAVED SUCCESSFULLY' TYPE 'S'.



  endif.

ENDFORM.           "SAVe
